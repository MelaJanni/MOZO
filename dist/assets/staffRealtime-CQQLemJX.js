const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-CAcerDvW.js","assets/vendor-DPnOlTVy.js","assets/bootstrap--QliLv9A.js","assets/index-D91yHXQH.css"])))=>i.map(i=>d[i]);
import{_ as e,i as t,a as s,o,r,b as a}from"./index-CAcerDvW.js";import"./vendor-DPnOlTVy.js";import"./bootstrap--QliLv9A.js";let n=null,i=null;const l=async()=>{if(console.log("🔍 DEBUG: ensureInit called, current db:",!!i),i)return console.log("🔍 DEBUG: Database already initialized, returning existing"),{app:n,db:i};try{console.log("🔍 DEBUG: Initializing Firebase app...");const o=await t();if(!o)return console.error("🔍 DEBUG: Failed to initialize Firebase app"),null;if(console.log("🔍 DEBUG: Firebase instance obtained:",!!o.app),n=o.app,i=s(n),console.log("🔍 DEBUG: Database created:",!!i),o.auth){console.log("🔍 DEBUG: Waiting for auth state to stabilize...");const{onAuthStateChanged:t}=await e(async()=>{const{onAuthStateChanged:e}=await import("./index-CAcerDvW.js").then(e=>e.U);return{onAuthStateChanged:e}},__vite__mapDeps([0,1,2,3]));await new Promise(e=>{const s=t(o.auth,t=>{console.log("🔍 DEBUG: Auth state changed:",t?"authenticated":"not authenticated"),s(),e()})})}return console.log("🔍 DEBUG: Firebase initialized successfully"),{app:n,db:i}}catch(o){return console.error("🔍 DEBUG: Firebase init error",o),null}},c=new Map;async function u(e,t){if(console.log("🔍 DEBUG: startStaffRealtimeForAdmin called with businessId:",e),!e)return void console.log("🔍 DEBUG: No businessId provided, returning early");console.log("🔍 DEBUG: Ensuring Firebase init...");if(!(await l()))return void console.log("🔍 DEBUG: Firebase init failed, returning early");const s=`businesses_staff/${e}`;console.log("🔍 DEBUG: Setting up listener for path:",s);const o=r(i,s),n=a(o,e=>{const o=e.val();console.log("🚨🚨🚨 FIREBASE LISTENER TRIGGERED! 🚨🚨🚨"),console.log("🔍 DEBUG: Admin listener received data for path",s,":",o),console.log("🔍 DEBUG: Snapshot exists:",e.exists()),console.log("🔍 DEBUG: Snapshot key:",e.key),null===o&&console.log("🔍 DEBUG: Received NULL data - this might be normal for initial empty state");try{t&&"function"==typeof t?(console.log("🔍 DEBUG: Calling onChange callback with data:",o),t(o)):console.log("🔍 DEBUG: onChange is not a valid function:",t)}catch(r){console.error("🔍 DEBUG: startStaffRealtimeForAdmin onChange error",r)}},e=>{console.error("🔍 DEBUG: startStaffRealtimeForAdmin listener error for path:",s,"error:",e)});c.set(`admin:${e}`,{ref:o,unsubscribe:n}),console.log("🔍 DEBUG: Admin listener successfully started for businessId:",e,"path:",s)}function f(e){const t=`admin:${e}`,s=c.get(t);if(s){try{o(s.ref)}catch(r){console.warn("stopStaffRealtimeForAdmin off error",r)}c.delete(t),console.log("staffRealtime: admin listener stopped for",e)}}async function d(t,s){if(!t)return void console.warn("staffRealtime: No userId provided");console.log("🔥 staffRealtime: Starting user listener for userId:",t);if(!(await l()))return void console.error("staffRealtime: Failed to initialize Firebase");const o=`users_staff/${t}`;console.log("🔥 staffRealtime: Setting up listener for path:",o);try{const{getAuth:t}=await e(async()=>{const{getAuth:e}=await import("./index-CAcerDvW.js").then(e=>e.U);return{getAuth:e}},__vite__mapDeps([0,1,2,3])),s=t(n).currentUser;console.log("🔥 staffRealtime: Current user before listener setup:",s?s.uid:"null"),s||console.warn("🔥 staffRealtime: No authenticated user found, this may cause permission errors")}catch(d){console.error("🔥 staffRealtime: Error checking auth state:",d)}const u=r(i,o),f=a(u,e=>{const t=e.val();try{s&&"function"==typeof s&&s(t)}catch(o){console.error("startStaffRealtimeForUser onChange error",o)}},e=>{console.error("🔥 startStaffRealtimeForUser listener error for path:",o,e),console.error("🔥 Error details:",{code:null==e?void 0:e.code,message:null==e?void 0:e.message,details:(null==e?void 0:e.details)||(null==e?void 0:e.toString())})});c.set(`user:${t}`,{ref:u,unsubscribe:f}),console.log("staffRealtime: user listener started for",t)}function g(e){const t=`user:${e}`,s=c.get(t);if(s){try{o(s.ref)}catch(r){console.warn("stopStaffRealtimeForUser off error",r)}c.delete(t),console.log("staffRealtime: user listener stopped for",e)}}async function p(t,s){if(console.log("🔔 writeStaffRequest called with businessId:",t,"data:",s),!t)throw console.error("🔔 writeStaffRequest: No businessId provided"),new Error("Business ID is required");if(!(await l()))throw console.error("🔔 writeStaffRequest: Firebase init failed"),new Error("Failed to initialize Firebase");try{const{set:o,push:r,ref:a,serverTimestamp:n}=await e(async()=>{const{set:e,push:t,ref:s,serverTimestamp:o}=await import("./index-CAcerDvW.js").then(e=>e.V);return{set:e,push:t,ref:s,serverTimestamp:o}},__vite__mapDeps([0,1,2,3])),l=`businesses_staff/${t}`;console.log("🔔 writeStaffRequest: Writing to path:",l);const c={stats:{pending_count:1,total_requests:1,last_updated:n()},recent_activity:{last_request_id:s.last_request_id||s.id,last_request_name:s.last_request_name||s.name,last_request_status:s.last_request_status||s.status,last_update:n(),request_details:{id:s.id,name:s.name,user_id:s.user_id,status:s.status,created_at:s.created_at}}},u=a(i,l);return await o(u,c),console.log("🔔 writeStaffRequest: Successfully wrote to Firebase:",c),c}catch(o){throw console.error("🔔 writeStaffRequest: Error writing to Firebase:",o),o}}export{u as startStaffRealtimeForAdmin,d as startStaffRealtimeForUser,f as stopStaffRealtimeForAdmin,g as stopStaffRealtimeForUser,p as writeStaffRequest};
